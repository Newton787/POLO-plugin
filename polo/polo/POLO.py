# -*- coding: utf-8 -*-
"""
/***************************************************************************
 POLO
                                 A QGIS plugin
 Elabora automaticamente relátorios e mapas de focos de calor a partir do bando de dados FIRMS/NASA
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-01-29
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Newton Coelho Monteiro
        email                : newtongel@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction
from qgis.core import QgsApplication
from qgis.core import QgsProject
from qgis.core import QgsLayoutExporter
from qgis.core import QgsProcessing
from qgis.core import QgsProcessingAlgorithm
from qgis.core import QgsProcessingMultiStepFeedback
from qgis.core import QgsProcessingParameterFeatureSink
from qgis.core import QgsCoordinateReferenceSystem
from qgis.core import QgsExpression
from datetime import datetime
import os
import processing



# Initialize Qt resources from file resources.py
from .resources import *
# Import the code for the dialog
from .POLO_dialog import POLODialog
import os.path


class POLO:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: An interface instance that will be passed to this class
            which provides the hook by which you can manipulate the QGIS
            application at run time.
        :type iface: QgsInterface
        """
        # Save reference to the QGIS interface
        self.iface = iface
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)
        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'POLO_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)

        # Declare instance attributes
        self.actions = []
        self.menu = self.tr(u'&POLO')

        # Check if plugin was started the first time in current QGIS session
        # Must be set in initGui() to survive plugin reloads
        self.first_start = None

    # noinspection PyMethodMayBeStatic
    def tr(self, message):
        """Get the translation for a string using Qt translation API.

        We implement this ourselves since we do not inherit QObject.

        :param message: String for translation.
        :type message: str, QString

        :returns: Translated version of message.
        :rtype: QString
        """
        # noinspection PyTypeChecker,PyArgumentList,PyCallByClass
        return QCoreApplication.translate('POLO', message)


    def add_action(
        self,
        icon_path,
        text,
        callback,
        enabled_flag=True,
        add_to_menu=True,
        add_to_toolbar=True,
        status_tip=None,
        whats_this=None,
        parent=None):
        """Add a toolbar icon to the toolbar.

        :param icon_path: Path to the icon for this action. Can be a resource
            path (e.g. ':/plugins/foo/bar.png') or a normal file system path.
        :type icon_path: str

        :param text: Text that should be shown in menu items for this action.
        :type text: str

        :param callback: Function to be called when the action is triggered.
        :type callback: function

        :param enabled_flag: A flag indicating if the action should be enabled
            by default. Defaults to True.
        :type enabled_flag: bool

        :param add_to_menu: Flag indicating whether the action should also
            be added to the menu. Defaults to True.
        :type add_to_menu: bool

        :param add_to_toolbar: Flag indicating whether the action should also
            be added to the toolbar. Defaults to True.
        :type add_to_toolbar: bool

        :param status_tip: Optional text to show in a popup when mouse pointer
            hovers over the action.
        :type status_tip: str

        :param parent: Parent widget for the new action. Defaults None.
        :type parent: QWidget

        :param whats_this: Optional text to show in the status bar when the
            mouse pointer hovers over the action.

        :returns: The action that was created. Note that the action is also
            added to self.actions list.
        :rtype: QAction
        """

        icon = QIcon(icon_path)
        action = QAction(icon, text, parent)
        action.triggered.connect(callback)
        action.setEnabled(enabled_flag)

        if status_tip is not None:
            action.setStatusTip(status_tip)

        if whats_this is not None:
            action.setWhatsThis(whats_this)

        if add_to_toolbar:
            # Adds plugin icon to Plugins toolbar
            self.iface.addToolBarIcon(action)

        if add_to_menu:
            self.iface.addPluginToMenu(
                self.menu,
                action)

        self.actions.append(action)

        return action

    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""

        icon_path = ':/plugins/POLO/icon.png'
        self.add_action(
            icon_path,
            text=self.tr(u'Acessar os focos de calor'),
            callback=self.run,
            parent=self.iface.mainWindow())

        # will be set False in run()
        self.first_start = True


    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        for action in self.actions:
            self.iface.removePluginMenu(
                self.tr(u'&POLO'),
                action)
            self.iface.removeToolBarIcon(action)


    def run(self):
        """Run method that performs all the real work"""

        # Create the dialog with elements (after translation) and keep reference
        # Only create GUI ONCE in callback, so that it will only load when the plugin is started
        if self.first_start == True:
            self.first_start = False
            self.dlg = POLODialog()

        # show the dialog
        self.dlg.show()
        # Run the dialog event loop
        result = self.dlg.exec_()
        # See if OK was pressed
        if result:
            # Do something useful here - delete the line containing pass and
            # substitute with your code.
            # pass
            #RESETE_PROCESS
            import shutil
            shutil.rmtree(
                os.path.expanduser('~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/'))
            os.mkdir(os.path.expanduser('~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/'))

            from shutil import copyfile
            copyfile(os.path.expanduser('~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/recursos/POLO.qgz'),
                     os.path.expanduser('~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/POLO.qgz'))

            # Hidrografia_Linhas
            # Donwload_KML
            processing.runAndLoadResults("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1qCULQd8MKynZChMlCZYiY1iXzJkhDbQD&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia_.kml')})
            # Verificação de geometria
            processing.runAndLoadResults("qgis:checkvalidity",
                                         {'INPUT_LAYER': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia_.kml'),
                                             'METHOD': 2, 'IGNORE_RING_SELF_INTERSECTION': False,
                                             'VALID_OUTPUT': os.path.expanduser(
                                                 '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia.gpkg')})
            # Downlaod_Estilo
            processing.run("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1BNunj56yiljlb8petZ3Rv1SINMl9-XuR&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia_.qml')})
            # Aplicar_Estilo
            processing.run("native:setlayerstyle",
                           {'INPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia.gpkg'),
                               'STYLE': os.path.expanduser(
                                   '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Hidrografia_.qml')})

            # Hidrografia_Poly
            # Donwload_KML
            processing.runAndLoadResults("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1RXbqteoxbYZ6L9F17R7aI8svpVYEQ4fe&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly_.kml')})
            # Verificação de geometria
            processing.runAndLoadResults("qgis:checkvalidity",
                                         {'INPUT_LAYER': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly_.kml'),
                                             'METHOD': 2, 'IGNORE_RING_SELF_INTERSECTION': False,
                                             'VALID_OUTPUT': os.path.expanduser(
                                                 '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly.gpkg')})
            # Downlaod_Estilo
            processing.run("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1_-Tde-pw-RYZkrO9xMf7sXuhlgDA2iAK&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly_.qml')})
            # Aplicar_Estilo
            processing.run("native:setlayerstyle",
                           {'INPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly.gpkg'),
                               'STYLE': os.path.expanduser(
                                   '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/HidrografiaPoly_.qml')})

            # Vias de acesso
            # Donwload_KML
            processing.runAndLoadResults("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1qmWXKmJUbAdzcKmNqddnJgkH6pFDAmpR&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Rodovias_.kml')})
            # Verificação de geometria
            processing.runAndLoadResults("qgis:checkvalidity",
                                         {'INPUT_LAYER': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Rodovias_.kml'),
                                             'METHOD': 2, 'IGNORE_RING_SELF_INTERSECTION': False,
                                             'VALID_OUTPUT': os.path.expanduser(
                                                 '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Vias de acesso.gpkg')})
            # Downlaod_Estilo
            processing.run("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1FBcVyOeszLd_8wk8EE0c5XzgqWxZVtEt&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Rodovias_.qml')})
            # Aplicar_Estilo
            processing.run("native:setlayerstyle",
                           {'INPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Vias de acesso.gpkg'),
                               'STYLE': os.path.expanduser(
                                   '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Rodovias_.qml')})

            # Municipio
            # Donwload_KML
            processing.runAndLoadResults("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1xVQBR5IuD9lTiSApTdXtwTuCdpGTeLLS&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Municipios_.kml')})
            # Verificação de geometria
            processing.runAndLoadResults("qgis:checkvalidity",
                                         {'INPUT_LAYER': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Municipios_.kml'),
                                             'METHOD': 2, 'IGNORE_RING_SELF_INTERSECTION': False,
                                             'VALID_OUTPUT': os.path.expanduser(
                                                 '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Limites municipais.gpkg')})
            # Downlaod_Estilo
            processing.run("native:filedownloader", {
                'URL': 'https://drive.google.com/u/0/uc?id=1kgF5AKGrof150-YmMeVTGgwhMGhgEDY1&export=download',
                'OUTPUT': os.path.expanduser(
                    '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Municipios_.qml')})
            # Aplicar_Estilo
            processing.run("native:setlayerstyle",
                           {'INPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Limites municipais.gpkg'),
                               'STYLE': os.path.expanduser(
                                   '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Municipios_.qml')})

            # Focos de calor

            # Donwload_CSV
            # LINK TESTE>> https://drive.google.com/u/0/uc?id=1tmNyvujgm-PRlZb_Cb14P6iiQ812wuHp&export=download
            # LINK FIRMS NASA https://firms.modaps.eosdis.nasa.gov/data/active_fire/c6/csv/MODIS_C6_South_America_7d.csv

        processing.run("native:filedownloader", {
            'URL': 'https://firms.modaps.eosdis.nasa.gov/data/active_fire/c6/csv/MODIS_C6_South_America_7d.csv',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/DADOS.csv')})

        # Donwload_qml Focos de calor
        processing.run("native:filedownloader", {
            'URL': 'https://drive.google.com/u/0/uc?id=1K5nAihJBfjV7HcQ87soqqDNFg2SfBAtW&export=download',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/focosdecalor.qml')})

        # Donwload_qml Kernel
        processing.run("native:filedownloader", {
            'URL': 'https://drive.google.com/u/0/uc?id=191MdbDgGvLbvlHfjlfE4TBoj9rXMuRv8&export=download',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Kernel.qml')})

        # CSV para gpkg
        processing.run("native:createpointslayerfromtable", {
            'INPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/DADOS.csv'),
            'XFIELD': 'longitude', 'YFIELD': 'latitude', 'ZFIELD': '', 'MFIELD': '',
            'TARGET_CRS': QgsCoordinateReferenceSystem('EPSG:4326'),
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dados.gpkg')})
        # Intersect focos
        processing.run("native:intersection",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dados.gpkg'),
                           'OVERLAY': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Limites municipais.gpkg'),
                           'INPUT_FIELDS': [], 'OVERLAY_FIELDS': [], 'OVERLAY_FIELDS_PREFIX': '',
                           'OUTPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos_AM.gpkg')})
        # editar colunas para kernel
        processing.runAndLoadResults("native:refactorfields",
                                     {'INPUT': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos_AM.gpkg'),
                                         'FIELDS_MAPPING': [
                                             {'expression': '\"latitude\"', 'length': 0, 'name': 'latitude',
                                              'precision': 0, 'type': 10},
                                             {'expression': '\"longitude\"', 'length': 0, 'name': 'longitude',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"acq_date\"', 'length': 0, 'name': 'acq_date',
                                              'precision': 0, 'type': 10},
                                             {'expression': '\"satellite\"', 'length': 0, 'name': 'satellite',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"version\"', 'length': 0, 'name': 'version',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"NOME\"', 'length': 0, 'name': 'NOME', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"ESTADO\"', 'length': 0, 'name': 'ESTADO', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"Região\"', 'length': 0, 'name': 'Região', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"acq_date\"', 'length': 0, 'name': 'DATA', 'precision': 0,
                                              'type': 14}],
                                         'OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Intensidade focos de calor.gpkg')})

        # Aplicar_Estilo para Kernel
        processing.run("native:setlayerstyle",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Intensidade focos de calor.gpkg'),
                           'STYLE': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Kernel.qml')})
        # Editar colunas para focos de calor
        processing.runAndLoadResults("native:refactorfields",
                                     {'INPUT': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos_AM.gpkg'),
                                         'FIELDS_MAPPING': [
                                             {'expression': '\"latitude\"', 'length': 0, 'name': 'latitude',
                                              'precision': 0, 'type': 10},
                                             {'expression': '\"longitude\"', 'length': 0, 'name': 'longitude',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"acq_date\"', 'length': 0, 'name': 'acq_date',
                                              'precision': 0, 'type': 10},
                                             {'expression': '\"satellite\"', 'length': 0, 'name': 'satellite',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"version\"', 'length': 0, 'name': 'version',
                                              'precision': 0,
                                              'type': 10},
                                             {'expression': '\"NOME\"', 'length': 0, 'name': 'NOME', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"ESTADO\"', 'length': 0, 'name': 'ESTADO', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"Região\"', 'length': 0, 'name': 'Região', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"acq_date\"', 'length': 0, 'name': 'DATA', 'precision': 0,
                                              'type': 14}],
                                         'OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos de calor.gpkg')})

        # Focos de Calor por cidade
        processing.runAndLoadResults("qgis:statisticsbycategories",
                                     {'INPUT': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos de calor.gpkg'),
                                         'VALUES_FIELD_NAME': '', 'CATEGORIES_FIELD_NAME': ['NOME'],
                                         'OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos por Cidade.gpkg')})
        # Focos de Calor por Mesoregião
        processing.runAndLoadResults("qgis:statisticsbycategories",
                                     {'INPUT': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos de calor.gpkg'),
                                         'VALUES_FIELD_NAME': '', 'CATEGORIES_FIELD_NAME': ['Região'],
                                         'OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos por Mesoregião.gpkg')})

        # Aplicar_Estilo para focos de calor
        processing.run("native:setlayerstyle",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos de calor.gpkg'),
                           'STYLE': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/focosdecalor.qml')})

        # Kernel CORE
        # Donwload_qml Kernel
        processing.run("native:filedownloader", {
            'URL': 'https://drive.google.com/u/0/uc?id=1IRoE-TNyS70WIOjzk3RPajGQBpOJtURx&export=download',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Areasprioritarias.qml')})
        # Analise de kernel
        processing.run("qgis:heatmapkerneldensityestimation",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Intensidade focos de calor.gpkg'),
                           'RADIUS': 0.2, 'RADIUS_FIELD': '', 'PIXEL_SIZE': 0.00778, 'WEIGHT_FIELD': '', 'KERNEL': 0,
                           'DECAY': 0, 'OUTPUT_VALUE': 0, 'OUTPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/KERNEL.tif')})
        # Linhas do Kernel
        processing.run("gdal:contour",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/KERNEL.tif'),
                           'BAND': 1,
                           'INTERVAL': 0.5, 'FIELD_NAME': 'SCORE', 'CREATE_3D': False, 'IGNORE_NODATA': False,
                           'NODATA': None, 'OFFSET': 0, 'EXTRA': '', 'OUTPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/KernelLinhas.gpkg')})
        # Score Alto
        processing.run("native:extractbyexpression",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/KernelLinhas.gpkg'),
                           'EXPRESSION': '\"SCORE\">(maximum(\"SCORE\")*0.6)', 'OUTPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/SCOREAlto.gpkg')})
        # Score Selecionado
        processing.run("native:extractbyexpression",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/SCOREAlto.gpkg'),
                           'EXPRESSION': '\"SCORE\"=minimum(\"SCORE\")\r\n', 'OUTPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/SCORESelec.gpkg')})
        # Linha para Poligono
        processing.run("qgis:linestopolygons",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/SCORESelec.gpkg'),
                           'OUTPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/CORE.gpkg')})
        # Centroides dos Poligonos
        processing.run("native:centroids",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/CORE.gpkg'),
                           'ALL_PARTS': False,
                           'OUTPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/CORECentroides.gpkg')})
        # Intercessão Municipios_Centroides dos Poligonos
        processing.run("native:intersection", {
            'INPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/CORECentroides.gpkg'),
            'OVERLAY': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Limites municipais.gpkg'),
            'INPUT_FIELDS': [],
            'OVERLAY_FIELDS': [], 'OVERLAY_FIELDS_PREFIX': '', 'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/centroidsintersect.gpkg')})
        # Editar Campo Centroides
        processing.run("native:refactorfields", {
            'INPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/centroidsintersect.gpkg'),
            'FIELDS_MAPPING': [{'expression': '\"NOME\"', 'length': 0, 'name': 'NOME', 'precision': 0, 'type': 10},
                               {'expression': '\"ESTADO\"', 'length': 0, 'name': 'ESTADO', 'precision': 0, 'type': 10},
                               {'expression': '\"Região\"', 'length': 0, 'name': 'Região', 'precision': 0, 'type': 10},
                               {'expression': 'to_dms($y,\'y\',2)', 'length': 20, 'name': 'Lat', 'precision': 0,
                                'type': 10},
                               {'expression': 'to_dms($x,\'x\',2)', 'length': 20, 'name': 'Long', 'precision': 0,
                                'type': 10}], 'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/centroideEDITADO.gpkg')})
        # Associar atributo por local
        processing.run("native:joinattributesbylocation",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/CORE.gpkg'),
                           'JOIN': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/centroideEDITADO.gpkg'),
                           'PREDICATE': [0], 'JOIN_FIELDS': [], 'METHOD': 0, 'DISCARD_NONMATCHING': False, 'PREFIX': '',
                           'OUTPUT': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/COREpronto.gpkg')})
        # Contagem Core_focos
        processing.run("native:countpointsinpolygon",
                       {'POLYGONS': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/COREpronto.gpkg'),
                           'POINTS': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Focos de calor.gpkg'),
                           'WEIGHT': '',
                           'CLASSFIELD': '', 'FIELD': 'NFocos', 'OUTPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Contagem.gpkg')})
        # Core>25
        processing.run("native:extractbyexpression", {
            'INPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Contagem.gpkg'),
            'EXPRESSION': ' \"NFocos\">25', 'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/COREValido.gpkg')})
        # Areas Prioritarias
        processing.runAndLoadResults("native:refactorfields",
                                     {'INPUT': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/COREValido.gpkg'),
                                         'FIELDS_MAPPING': [
                                             {'expression': '\"fid\"', 'length': 0, 'name': 'fid', 'precision': 0,
                                              'type': 4},
                                             {'expression': '\'ÁREA-\'||lpad(@row_number+1,2,0)', 'length': 10,
                                              'name': 'Area_n',
                                              'precision': 0, 'type': 10},
                                             {'expression': '\"NOME\"', 'length': 0, 'name': 'NOME', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"ESTADO\"', 'length': 0, 'name': 'ESTADO', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"Região\"', 'length': 0, 'name': 'Região', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"Lat\"', 'length': 20, 'name': 'Lat', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"Long\"', 'length': 20, 'name': 'Long', 'precision': 0,
                                              'type': 10},
                                             {'expression': '\"NFocos\"', 'length': 0, 'name': 'NFocos', 'precision': 0,
                                              'type': 6}],
                                         'OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Áreas Prioritárias.gpkg')})
        # Aplicar_Estilo para Áreas Prioritárias
        processing.run("native:setlayerstyle",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Áreas Prioritárias.gpkg'),
                           'STYLE': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Areasprioritarias.qml')})

        # DASHBOARD
        # Donwload_qml Dashboard
        processing.run("native:filedownloader", {
            'URL': 'https://drive.google.com/u/0/uc?id=1PTiQKFOrlRPY4Yd6Vt_0KkyjoXJ5kk8O&export=download',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dashboard_.qml')})
        # Donwload Dashboard
        processing.runAndLoadResults("native:filedownloader", {
            'URL': 'https://drive.google.com/u/0/uc?id=1NMSVdU1kqxGkVT2u1aYmuHiUM-jKO2wx&export=download',
            'OUTPUT': os.path.expanduser(
                '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/_Dashboard.gpkg')})
        processing.runAndLoadResults("qgis:checkvalidity",
                                     {'INPUT_LAYER': os.path.expanduser(
                                         '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/_Dashboard.gpkg'),
                                         'METHOD': 2, 'IGNORE_RING_SELF_INTERSECTION': False,
                                         'VALID_OUTPUT': os.path.expanduser(
                                             '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dashboard.gpkg')})
        # Aplicar_Estilo para Dashboard
        processing.run("native:setlayerstyle",
                       {'INPUT': os.path.expanduser(
                           '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dashboard.gpkg'),
                           'STYLE': os.path.expanduser(
                               '~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/Process/Dashboard_.qml')})
        #ABRIR MAPA RELATORIO
        project = QgsProject.instance()
        project.read(os.path.expanduser('~/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/polo/POLO.QGZ'))
        print(project.fileName())

        #Exportar relatório

        DATANAME = datetime.now().strftime("%d_%m_%y")
        processing.run("native:printlayouttopdf",
                       {'LAYOUT': 'Relatório Focos de Calor', 'LAYERS': None, 'DPI': None, 'FORCE_VECTOR': False,
                        'GEOREFERENCE': True, 'INCLUDE_METADATA': True, 'DISABLE_TILED': False, 'SIMPLIFY': True,
                        'TEXT_FORMAT': 0, 'SEPARATE_LAYERS': False,
                        'OUTPUT':os.path.expanduser('~/Desktop/Relatorio focos de calor_'+DATANAME+'.pdf')})


